{"version":3,"sources":["webpack://darkys_achievements_and_upgrades_batch/./src/Darkys_Armful_Collection_of_Upgrades/init/overrides/index.js","webpack://darkys_achievements_and_upgrades_batch/./src/Darkys_Armful_Collection_of_Upgrades/init/checkHook/index.js","webpack://darkys_achievements_and_upgrades_batch/./src/Darkys_Armful_Collection_of_Upgrades/init/checkHook/components/tiered/index.js","webpack://darkys_achievements_and_upgrades_batch/./src/Darkys_Armful_Collection_of_Upgrades/Upgrade/index.js","webpack://darkys_achievements_and_upgrades_batch/./src/Darkys_Armful_Collection_of_Upgrades/TieredUpgrade/index.js","webpack://darkys_achievements_and_upgrades_batch/./src/Darkys_Armful_Collection_of_Upgrades/init/createHook/index.js","webpack://darkys_achievements_and_upgrades_batch/./src/Darkys_Armful_Collection_of_Upgrades/init/createHook/components/tiered/index.js","webpack://darkys_achievements_and_upgrades_batch/./src/Darkys_Armful_Collection_of_Upgrades/index.js","webpack://darkys_achievements_and_upgrades_batch/./src/Darkys_Armful_Collection_of_Upgrades/init/index.js","webpack://darkys_achievements_and_upgrades_batch/./src/Darkys_Armful_Collection_of_Upgrades/save/index.js","webpack://darkys_achievements_and_upgrades_batch/./src/Darkys_Armful_Collection_of_Upgrades/load/index.js"],"names":["Game","Objects","amount","Unlock","name","desc","price","icon","buyFunction","answer","Upgrade","darky","building","tier","TieredUpgrade","last","order","MakeTiered","DarkysUpgradeCollection","init","style","document","createElement","textContent","head","appendChild","crate","Function","toString","split","join","registerHook","checkHook","save","DarkySave","boughtUpgrades","unlockedUpgrades","UpgradesById","forEach","upgrade","unlocked","push","bought","JSON","stringify","load","saveString","parse","upgradeName","Achievements","registerMod","Notify","PlaySound"],"mappings":"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","file":"Darkys_Armful_Collection_of_Upgrades.js","sourcesContent":["const overrides = () => {\n    const style = document.createElement(\"style\");\n    style.textContent = \".darky:before{background:url(https://i.imgur.com/q8nNdkI.png);background-position:120px 0px;}\";\n    document.head.appendChild(style);\n\n    Game.crate = new Function(\n        `return ${Game.crate\n            .toString()\n            .split(\"classes+=' upgrade';\")\n            .join(\"classes+=' upgrade';\\nif (me.darky === 1) classes+=' darky';//Darky's upgrade package injection\")}`\n    )();\n};\n\nexport default overrides;\n","import { original, tiered } from \"./components\";\n\nconst checkHookContent = [...original, ...tiered];\n\nexport default checkHookContent;\n","const tiered = [\n    // () => {\n    //     if (Game.Objects[\"Cursor\"].amount >= 450) {\n    //         Game.Unlock(\"Nonillion fingers\");\n    //     }\n    // },\n    // () => {\n    //     if (Game.handmadeCookies >= 1e27) {\n    //         Game.Unlock(\"Loyalystic mouse\");\n    //     }\n    // },\n    () => {\n        if (Game.Objects[\"Grandma\"].amount >= 500) {\n            Game.Unlock(\"Granny talk\");\n        }\n    },\n    () => {\n        if (Game.Objects[\"Farm\"].amount >= 500) {\n            Game.Unlock(\"Chocolate chip seeds\");\n        }\n    },\n    () => {\n        if (Game.Objects[\"Mine\"].amount >= 500) {\n            Game.Unlock(\"Omegadrill\");\n        }\n    },\n    () => {\n        if (Game.Objects[\"Factory\"].amount >= 500) {\n            Game.Unlock(\"Pumping out new workers\");\n        }\n    },\n    () => {\n        if (Game.Objects[\"Bank\"].amount >= 500) {\n            Game.Unlock(\"Baking the dough\");\n        }\n    },\n    () => {\n        if (Game.Objects[\"Temple\"].amount >= 500) {\n            Game.Unlock(\"Cookie cults\");\n        }\n    },\n    () => {\n        if (Game.Objects[\"Wizard tower\"].amount >= 500) {\n            Game.Unlock(\"Trix™️\");\n        }\n    },\n    () => {\n        if (Game.Objects[\"Shipment\"].amount >= 500) {\n            Game.Unlock(\"Hyperspeed\");\n        }\n    },\n    () => {\n        if (Game.Objects[\"Alchemy lab\"].amount >= 500) {\n            Game.Unlock(\"The way we make golden cookies\");\n        }\n    },\n    () => {\n        if (Game.Objects[\"Portal\"].amount >= 500) {\n            Game.Unlock(\"Portal to nowhere\");\n        }\n    },\n    () => {\n        if (Game.Objects[\"Time machine\"].amount >= 500) {\n            Game.Unlock(\"Year of the weekly months without the days\");\n        }\n    },\n    () => {\n        if (Game.Objects[\"Antimatter condenser\"].amount >= 500) {\n            Game.Unlock(\"Bake matter\");\n        }\n    },\n    () => {\n        if (Game.Objects[\"Prism\"].amount >= 500) {\n            Game.Unlock(\"Shiny!!\");\n        }\n    },\n    () => {\n        if (Game.Objects[\"Chancemaker\"].amount >= 500) {\n            Game.Unlock(\"Casino fever\");\n        }\n    },\n    () => {\n        if (Game.Objects[\"Fractal engine\"].amount >= 500) {\n            Game.Unlock(\"Big brain time\");\n        }\n    },\n    () => {\n        if (Game.Objects[\"Javascript console\"].amount >= 500) {\n            Game.Unlock(\"Darky can't actually code\");\n        }\n    },\n];\n\nexport default tiered;\n","const Upgrade = (name, desc, price, icon, buyFunction) => {\n    const answer = new Game.Upgrade(name, desc, price, icon, buyFunction);\n    answer.darky = 1;\n\n    return answer;\n};\n\nexport default Upgrade;\n","const TieredUpgrade = (name, desc, building, tier) => {\n    const answer = new Game.TieredUpgrade(name, desc, building, tier);\n    answer.darky = 1;\n\n    return answer;\n};\n\nexport default TieredUpgrade;\n","import { original, tiered } from \"./components\";\n\nconst createHook = () => {\n    original();\n    tiered();\n};\n\nexport default createHook;\n","import Upgrade from \"UpgradesRoot/Upgrade\";\nimport TieredUpgrade from \"UpgradesRoot/TieredUpgrade\";\n\nconst tiered = () => {\n    // Upgrade(\n    //     \"Nonillion fingers\",\n    //     \"The mouse and cursors gain <b>+50000000</b> cookies for each non-cursor object owned.<q>That's quite the finger power.</q>\",\n    //     1e25,\n    //     [13, 19]\n    // );\n    // Game.last.order = 113;\n    // Game.MakeTiered(Game.last, 13, 0);\n\n    Upgrade(\"Loyalystic mouse\", \"Clicking gains <b>+1% of your CpS</b>.<q>A true, true mouse.</q>\", 5e28, [11, 31]);\n    Game.last.order = 163;\n    Game.MakeTiered(Game.last, 13, 11);\n\n    TieredUpgrade(\n        \"Granny talk\",\n        \"Grandmas are <b>twice</b> as efficient.<q>Only a few have survived.</q>\",\n        \"Grandma\",\n        13\n    );\n    Game.last.order = 201;\n\n    TieredUpgrade(\"Chocolate chip seeds\", \"Farms are <b>twice</b> as efficient.<q>Makes sense, right?</q>\", \"Farm\", 13);\n    Game.last.order = 301;\n\n    TieredUpgrade(\n        \"Omegadrill\",\n        \"Mines are <b>twice</b> as efficient.<q>It's coming in late but we go it.</q>\",\n        \"Mine\",\n        13\n    );\n    Game.last.order = 401;\n\n    TieredUpgrade(\n        \"Pumping out new workers\",\n        \"Factories are <b>twice</b> as efficient.<q>Yes, we no longer need the birds and the bees, we can just create life itself!</q>\",\n        \"Factory\",\n        13\n    );\n    Game.last.order = 501;\n\n    TieredUpgrade(\n        \"Baking the dough\",\n        \"Banks are <b>twice</b> as efficient.<q>Instead of making the bucks.</q>\",\n        \"Bank\",\n        13\n    );\n    Game.last.order = 526;\n\n    TieredUpgrade(\n        \"Cookie cults\",\n        \"Temples are <b>twice</b> as efficient.<q>Every sunday they meet to bake in secret.</q>\",\n        \"Temple\",\n        13\n    );\n    Game.last.order = 551;\n\n    TieredUpgrade(\n        \"Trix™️\",\n        \"Wizard towers are <b>twice</b> as efficient.<q>Brand cookies which taste pretty bad but not taken off the market for some reason. These darn wizards and their silly magic, keeping their brand cookies alive with their magic!</q>\",\n        \"Wizard tower\",\n        13\n    );\n    Game.last.order = 576;\n\n    TieredUpgrade(\n        \"Hyperspeed\",\n        \"Shipments are <b>twice</b> as efficient.<q>HYPE, HYPE, HYPE, HYPE!</q>\",\n        \"Shipment\",\n        13\n    );\n    Game.last.order = 601;\n\n    TieredUpgrade(\n        \"The way we make golden cookies\",\n        \"Alchemy labs are <b>twice</b> as efficient.<q>[REDACTED]</q>\",\n        \"Alchemy lab\",\n        13\n    );\n    Game.last.order = 701;\n\n    TieredUpgrade(\n        \"Portal to nowhere\",\n        \"Portals are <b>twice</b> as efficient.<q>A quiet place to store the cookies. I don't know why you would want to do that though.</q>\",\n        \"Portal\",\n        13\n    );\n    Game.last.order = 801;\n\n    TieredUpgrade(\n        \"Year of the weekly months without the days\",\n        \"Time machines are <b>twice</b> as efficient.<q>Counting the hourly seconds by minutes.</q>\",\n        \"Time machine\",\n        13\n    );\n    Game.last.order = 901;\n\n    TieredUpgrade(\n        \"Bake matter\",\n        \"Antimatter condensers are <b>twice</b> as efficient.<q>Just a bunch of tiny balls during scientific baking.</q>\",\n        \"Antimatter condenser\",\n        13\n    );\n    Game.last.order = 1001;\n\n    TieredUpgrade(\"Shiny!!\", \"Prisms are <b>twice</b> as efficient.<q>Let's baking!</q>\", \"Prism\", 13);\n    Game.last.order = 1101;\n\n    TieredUpgrade(\n        \"Casino fever\",\n        \"Chancemakers are <b>twice</b> as efficient.<q>A dangerous place for your wallet has become heaven on earth for it.</q>\",\n        \"Chancemaker\",\n        13\n    );\n    Game.last.order = 1201;\n\n    TieredUpgrade(\n        \"Big brain time\",\n        \"Fractal engines are <b>twice</b> as efficient.<q>Think thonk.</q>\",\n        \"Fractal engine\",\n        13\n    );\n    Game.last.order = 1301;\n\n    TieredUpgrade(\n        \"Darky can't actually code\",\n        \"Javascript consoles are <b>twice</b> as efficient.<q>He just happened to be smart enough to make both an achievement and upgrade mod for Cookie Clicker.</q>\",\n        \"Javascript console\",\n        13\n    );\n    Game.last.order = 1401;\n};\n\nexport default tiered;\n","import init from \"./init\";\nimport load from \"./load\";\nimport save from \"./save\";\nimport TieredUpgrade from \"./TieredUpgrade\";\nimport Upgrade from \"./Upgrade\";\n\nconst DarkysUpgradeCollection = {\n    init,\n    save,\n    load,\n    Upgrade,\n    TieredUpgrade,\n};\n\nGame.registerMod(\"Darkys Upgrade Collection\", DarkysUpgradeCollection);\nGame.Notify(\n    \"Darky's Armful Collection of Upgrades 1.1\",\n    \" <b>16</b> new Upgrades have been added, enjoy and thank you for using my mod!\",\n    [19, 26, \"https://i.imgur.com/3jNJJNw.png\"]\n);\nPlaySound(\"https://freesound.org/data/previews/172/172589_71257-lq.mp3\");\n","import overrides from \"./overrides\";\nimport checkHookContent from \"./checkHook\";\nimport createHook from \"./createHook\";\n\nconst init = () => {\n    overrides();\n\n    Game.registerHook(\"check\", checkHookContent);\n    createHook();\n};\n\nexport default init;\n","const save = () => {\n    const DarkySave = {\n        boughtUpgrades: [],\n        unlockedUpgrades: [],\n    };\n\n    Game.UpgradesById.forEach(upgrade => {\n        if (upgrade.darky) {\n            if (upgrade.unlocked) {\n                DarkySave.unlockedUpgrades.push(upgrade.name);\n            }\n\n            if (upgrade.bought) {\n                DarkySave.boughtUpgrades.push(upgrade.name);\n            }\n        }\n    });\n\n    return JSON.stringify(DarkySave);\n};\n\nexport default save;\n","const load = saveString => {\n    const save = JSON.parse(saveString);\n\n    save.unlockedUpgrades.forEach(upgradeName => {\n        Game.Achievements[upgradeName].unlocked = 1;\n    });\n    save.boughtUpgrades.forEach(upgradeName => {\n        Game.Achievements[upgradeName].bought = 1;\n    });\n};\n\nexport default load;\n"],"sourceRoot":""}